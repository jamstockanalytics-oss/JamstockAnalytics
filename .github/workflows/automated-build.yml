name: Automated Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_profile:
        description: 'Build profile to use'
        required: true
        default: 'automated'
        type: choice
        options:
        - development
        - preview
        - production
        - automated
      platforms:
        description: 'Platforms to build'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - android
        - ios
        - web

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.check.outputs.should-build }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for changes
      id: check
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "should-build=true" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          echo "should-build=true" >> $GITHUB_OUTPUT
        else
          echo "should-build=false" >> $GITHUB_OUTPUT
        fi

  setup:
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.should-build == 'true'
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup environment
      run: node scripts/auto-setup-env.js
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
    
    - name: Setup database
      run: npm run setup-database
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
    
    - name: Seed database
      run: npm run seed-database
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run database tests
      run: npm run test-database
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
    
    - name: Run integration tests
      run: npm run test-chat-integration
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}

  build-android:
    runs-on: ubuntu-latest
    needs: test
    if: github.event.inputs.platforms == 'all' || github.event.inputs.platforms == 'android' || github.event.inputs.platforms == ''
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Expo CLI
      run: npm install -g @expo/cli eas-cli
    
    - name: Build Android
      run: eas build --platform android --profile ${{ github.event.inputs.build_profile || 'automated' }} --non-interactive
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  build-ios:
    runs-on: macos-latest
    needs: test
    if: github.event.inputs.platforms == 'all' || github.event.inputs.platforms == 'ios' || github.event.inputs.platforms == ''
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Expo CLI
      run: npm install -g @expo/cli eas-cli
    
    - name: Build iOS
      run: eas build --platform ios --profile ${{ github.event.inputs.build_profile || 'automated' }} --non-interactive
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  build-web:
    runs-on: ubuntu-latest
    needs: test
    if: github.event.inputs.platforms == 'all' || github.event.inputs.platforms == 'web' || github.event.inputs.platforms == ''
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build Web
      run: npm run build:web:auto
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
    
    - name: Upload web build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Expo CLI
      run: npm install -g @expo/cli eas-cli
    
    - name: Deploy to Expo
      run: npm run deploy:auto
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web, deploy]
    if: always()
    steps:
    - name: Notify build status
      run: |
        if [[ "${{ needs.build-android.result }}" == "success" && "${{ needs.build-ios.result }}" == "success" && "${{ needs.build-web.result }}" == "success" ]]; then
          echo "✅ All builds completed successfully!"
        else
          echo "❌ Some builds failed!"
        fi
