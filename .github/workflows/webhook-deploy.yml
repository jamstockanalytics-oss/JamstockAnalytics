name: Webhook Deployment

on:
  push:
    branches: [ master, main ]
    paths:
      - 'webhook-handler.js'
      - 'webhook-package.json'
      - 'Dockerfile.webhook'
      - 'docker-compose.webhook.yml'
      - 'render.yaml'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'webhook-handler.js'
      - 'webhook-package.json'
      - 'Dockerfile.webhook'
      - 'docker-compose.webhook.yml'
      - 'render.yaml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  webhook-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd webhook && npm ci
          
      - name: Run tests
        run: |
          npm test
          cd webhook && npm test
          
      - name: Build webhook service
        run: |
          echo "Building webhook service..."
          # Add any build steps here
          
      - name: Deploy to Render
        uses: render-actions/deploy@v1
        with:
          service-id: ${{ secrets.RENDER_WEBHOOK_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          
      - name: Verify deployment
        run: |
          echo "Verifying webhook deployment..."
          sleep 30
          curl -f ${{ secrets.WEBHOOK_URL }}/health || exit 1
          
      - name: Run webhook tests
        run: |
          echo "Running webhook integration tests..."
          node webhook-test.js
          
      - name: Notify deployment status
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}