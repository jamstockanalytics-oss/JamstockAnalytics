name: Webhook Deployment

on:
  push:
    branches: [ master, main ]
    paths:
      - 'webhook-handler.js'
      - 'webhook-package.json'
      - 'Dockerfile.webhook'
      - 'docker-compose.webhook.yml'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'webhook-handler.js'
      - 'webhook-package.json'
      - 'Dockerfile.webhook'
      - 'docker-compose.webhook.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development
      force_deploy:
        description: 'Force deployment even if no changes'
        required: false
        default: false
        type: boolean

jobs:
  webhook-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install webhook dependencies
      run: |
        cd webhook-deploy
        npm install
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build webhook Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.webhook
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          jamstockanalytics/jamstockanalytics:webhook-${{ github.sha }}
          jamstockanalytics/jamstockanalytics:webhook-latest
        labels: |
          org.opencontainers.image.title=JamStockAnalytics Webhook
          org.opencontainers.image.description=Webhook handler for automated deployments
          org.opencontainers.image.version=${{ github.sha }}
          org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to Render
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      run: |
        echo "🚀 Deploying webhook to Render..."
        
        # Check if Render CLI is available
        if ! command -v render &> /dev/null; then
          echo "Installing Render CLI..."
          curl -fsSL https://cli.render.com/install.sh | bash
          export PATH="$HOME/.render/bin:$PATH"
        fi
        
        # Deploy to Render (if configured)
        if [ -n "${{ secrets.RENDER_API_KEY }}" ]; then
          echo "Deploying to Render service..."
          # Add Render deployment commands here
        else
          echo "⚠️ Render API key not configured, skipping Render deployment"
        fi
        
    - name: Test webhook endpoint
      run: |
        echo "🧪 Testing webhook endpoint..."
        
        # Wait for deployment to be ready
        sleep 30
        
        # Test health endpoint
        WEBHOOK_URL="https://jamstockanalytics-webhook.onrender.com"
        
        echo "Testing health endpoint..."
        curl -f "$WEBHOOK_URL/health" || {
          echo "❌ Health check failed"
          exit 1
        }
        
        echo "✅ Webhook health check passed"
        
        # Test webhook endpoint (should return 404 for GET, which is expected)
        echo "Testing webhook endpoint (GET should return 404)..."
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$WEBHOOK_URL/webhook")
        
        if [ "$HTTP_STATUS" = "404" ]; then
          echo "✅ Webhook endpoint correctly returns 404 for GET requests"
        else
          echo "⚠️ Unexpected response from webhook endpoint: $HTTP_STATUS"
        fi
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Webhook deployment successful"
          echo "🌐 Webhook URL: https://jamstockanalytics-webhook.onrender.com"
          echo "🔍 Health Check: https://jamstockanalytics-webhook.onrender.com/health"
          echo "📦 Docker Image: jamstockanalytics/jamstockanalytics:webhook-${{ github.sha }}"
        else
          echo "❌ Webhook deployment failed"
        fi
        
    - name: Create deployment summary
      if: always()
      run: |
        echo "## 🚀 Webhook Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ${{ job.status == 'success' && '✅ Success' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** ${{ github.event.inputs.environment || 'production' }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Webhook Endpoints:**" >> $GITHUB_STEP_SUMMARY
        echo "- Health: https://jamstockanalytics-webhook.onrender.com/health" >> $GITHUB_STEP_SUMMARY
        echo "- Webhook: https://jamstockanalytics-webhook.onrender.com/webhook" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Docker Image:**" >> $GITHUB_STEP_SUMMARY
        echo "- Tag: \`jamstockanalytics/jamstockanalytics:webhook-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- Latest: \`jamstockanalytics/jamstockanalytics:webhook-latest\`" >> $GITHUB_STEP_SUMMARY
