name: Enhanced Automated Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_profile:
        description: 'Build profile to use'
        required: true
        default: 'automated'
        type: choice
        options:
        - development
        - preview
        - production
        - automated
      platforms:
        description: 'Platforms to build'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - android
        - ios
        - web

env:
  # Global environment variables with fallbacks
  SUPABASE_URL: ${{ secrets.SUPABASE_URL || '' }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY || '' }}
  DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY || '' }}
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN || '' }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY || '' }}

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.check.outputs.should-build }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for changes
      id: check
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "should-build=true" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          echo "should-build=true" >> $GITHUB_OUTPUT
        else
          echo "should-build=false" >> $GITHUB_OUTPUT
        fi

  setup:
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.should-build == 'true'
    outputs:
      has-deepseek: ${{ steps.validate-secrets.outputs.has-deepseek }}
      has-expo-token: ${{ steps.validate-secrets.outputs.has-expo-token }}
      has-service-role: ${{ steps.validate-secrets.outputs.has-service-role }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Verify Node.js installation
      run: |
        echo "üîç Verifying Node.js installation..."
        node --version
        npm --version
        echo "‚úÖ Node.js setup verified"
    
    - name: Install dependencies
      run: |
        echo "üîß Installing dependencies..."
        npm ci --prefer-offline --no-audit
        echo "‚úÖ Dependencies installed successfully"
    
    - name: Validate secrets and environment
      id: validate-secrets
      run: |
        echo "üîç Validating required secrets..."
        
        # Core required secrets
        core_secrets_valid=true
        
        if [[ -z "${SUPABASE_URL:-}" ]]; then
          echo "‚ùå SUPABASE_URL secret is missing"
          core_secrets_valid=false
        else
          echo "‚úÖ SUPABASE_URL secret is present"
        fi
        
        if [[ -z "${SUPABASE_ANON_KEY:-}" ]]; then
          echo "‚ùå SUPABASE_ANON_KEY secret is missing"
          core_secrets_valid=false
        else
          echo "‚úÖ SUPABASE_ANON_KEY secret is present"
        fi
        
        # Optional secrets
        if [[ -z "${DEEPSEEK_API_KEY:-}" ]]; then
          echo "‚ö†Ô∏è  DEEPSEEK_API_KEY secret is missing - AI features will be disabled"
          echo "has-deepseek=false" >> $GITHUB_OUTPUT
        else
          echo "‚úÖ DEEPSEEK_API_KEY secret is present"
          echo "has-deepseek=true" >> $GITHUB_OUTPUT
        fi
        
        if [[ -z "${EXPO_TOKEN:-}" ]]; then
          echo "‚ö†Ô∏è  EXPO_TOKEN secret is missing - EAS builds will be skipped"
          echo "has-expo-token=false" >> $GITHUB_OUTPUT
        else
          echo "‚úÖ EXPO_TOKEN secret is present"
          echo "has-expo-token=true" >> $GITHUB_OUTPUT
        fi
        
        if [[ -z "${SUPABASE_SERVICE_ROLE_KEY:-}" ]]; then
          echo "‚ö†Ô∏è  SUPABASE_SERVICE_ROLE_KEY secret is missing - some database operations may fail"
          echo "has-service-role=false" >> $GITHUB_OUTPUT
        else
          echo "‚úÖ SUPABASE_SERVICE_ROLE_KEY secret is present"
          echo "has-service-role=true" >> $GITHUB_OUTPUT
        fi
        
        if [[ "$core_secrets_valid" == "false" ]]; then
          echo "‚ùå Core secrets validation failed"
          exit 1
        fi
        
        echo "‚úÖ Core secrets validation passed"
        echo "core-secrets-valid=true" >> $GITHUB_OUTPUT
    
    - name: Setup environment
      run: |
        echo "üîß Setting up environment..."
        if [ -f "scripts/auto-setup-env.js" ]; then
          node scripts/auto-setup-env.js
        else
          echo "‚ö†Ô∏è  auto-setup-env.js not found, creating basic environment setup"
          echo "EXPO_PUBLIC_SUPABASE_URL=${{ env.SUPABASE_URL || 'https://test.supabase.co' }}" > .env
          echo "EXPO_PUBLIC_SUPABASE_ANON_KEY=${{ env.SUPABASE_ANON_KEY || 'test-key' }}" >> .env
          echo "EXPO_PUBLIC_DEEPSEEK_API_KEY=${{ steps.validate-secrets.outputs.has-deepseek == 'true' && env.DEEPSEEK_API_KEY || 'disabled' }}" >> .env
          echo "SUPABASE_SERVICE_ROLE_KEY=${{ env.SUPABASE_SERVICE_ROLE_KEY || 'test-service-key' }}" >> .env
          echo "NODE_ENV=production" >> .env
          echo "‚úÖ Basic environment setup completed"
        fi
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ env.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ env.SUPABASE_SERVICE_ROLE_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ steps.validate-secrets.outputs.has-deepseek == 'true' && env.DEEPSEEK_API_KEY || 'disabled' }}
      continue-on-error: true
    
    - name: Setup database
      run: npm run setup-database
      if: steps.validate-secrets.outputs.has-service-role == 'true'
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ env.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ env.SUPABASE_SERVICE_ROLE_KEY }}
    
    - name: Skip database setup (no service role key)
      if: steps.validate-secrets.outputs.has-service-role == 'false'
      run: |
        echo "‚ö†Ô∏è  SUPABASE_SERVICE_ROLE_KEY not configured - skipping database setup"
        echo "üí° Add SUPABASE_SERVICE_ROLE_KEY to GitHub secrets to enable database operations"
    
    - name: Seed database
      run: npm run seed-database
      if: steps.validate-secrets.outputs.has-service-role == 'true'
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ env.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ env.SUPABASE_SERVICE_ROLE_KEY }}
    
    - name: Skip database seeding (no service role key)
      if: steps.validate-secrets.outputs.has-service-role == 'false'
      run: |
        echo "‚ö†Ô∏è  SUPABASE_SERVICE_ROLE_KEY not configured - skipping database seeding"
        echo "üí° Add SUPABASE_SERVICE_ROLE_KEY to GitHub secrets to enable database operations"

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run database tests
      run: npm run test-database
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ env.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ env.SUPABASE_SERVICE_ROLE_KEY }}
      continue-on-error: true
    
    - name: Run integration tests
      run: npm run test-chat-integration
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ env.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ env.DEEPSEEK_API_KEY || 'disabled' }}
      continue-on-error: true

  build-android:
    runs-on: ubuntu-latest
    needs: test
    if: |
      github.event.inputs.platforms == 'all' || 
      github.event.inputs.platforms == 'android' || 
      github.event.inputs.platforms == '' ||
      (github.event.inputs.platforms == null && github.event_name == 'push')
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Expo CLI and EAS CLI
      run: |
        npm install -g @expo/cli
        npm install -g eas-cli@latest
    
    - name: Check for EXPO_TOKEN
      id: check-expo-token
      run: |
        if [[ -n "${EXPO_TOKEN:-}" ]]; then
          echo "has-expo-token=true" >> $GITHUB_OUTPUT
        else
          echo "has-expo-token=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Build Android
      if: steps.check-expo-token.outputs.has-expo-token == 'true'
      run: |
        echo "üöÄ Starting Android build..."
        eas build --platform android --profile ${{ github.event.inputs.build_profile || 'automated' }} --non-interactive
        echo "‚úÖ Android build completed"
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ env.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ env.DEEPSEEK_API_KEY || 'disabled' }}
        EXPO_TOKEN: ${{ env.EXPO_TOKEN }}
    
    - name: Skip Android build (no EXPO_TOKEN)
      if: steps.check-expo-token.outputs.has-expo-token == 'false'
      run: |
        echo "‚ö†Ô∏è  EXPO_TOKEN not configured - skipping Android build"
        echo "üí° Add EXPO_TOKEN to GitHub secrets to enable EAS builds"

  build-ios:
    runs-on: macos-latest
    needs: test
    if: |
      github.event.inputs.platforms == 'all' || 
      github.event.inputs.platforms == 'ios' || 
      github.event.inputs.platforms == '' ||
      (github.event.inputs.platforms == null && github.event_name == 'push')
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Expo CLI and EAS CLI
      run: |
        npm install -g @expo/cli
        npm install -g eas-cli@latest
    
    - name: Check for EXPO_TOKEN
      id: check-expo-token-ios
      run: |
        if [[ -n "${EXPO_TOKEN:-}" ]]; then
          echo "has-expo-token=true" >> $GITHUB_OUTPUT
        else
          echo "has-expo-token=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Build iOS
      if: steps.check-expo-token-ios.outputs.has-expo-token == 'true'
      run: |
        echo "üöÄ Starting iOS build..."
        eas build --platform ios --profile ${{ github.event.inputs.build_profile || 'automated' }} --non-interactive
        echo "‚úÖ iOS build completed"
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ env.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ env.DEEPSEEK_API_KEY || 'disabled' }}
        EXPO_TOKEN: ${{ env.EXPO_TOKEN }}
    
    - name: Skip iOS build (no EXPO_TOKEN)
      if: steps.check-expo-token-ios.outputs.has-expo-token == 'false'
      run: |
        echo "‚ö†Ô∏è  EXPO_TOKEN not configured - skipping iOS build"
        echo "üí° Add EXPO_TOKEN to GitHub secrets to enable EAS builds"

  build-web:
    runs-on: ubuntu-latest
    needs: test
    if: |
      github.event.inputs.platforms == 'all' || 
      github.event.inputs.platforms == 'web' || 
      github.event.inputs.platforms == '' ||
      (github.event.inputs.platforms == null && github.event_name == 'push')
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build Web
      run: npm run build:web:auto
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ env.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ env.DEEPSEEK_API_KEY || 'disabled' }}
    
    - name: Upload web build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build-${{ github.sha }}
        path: dist/
        retention-days: 7
      if: always()

  deploy:
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web]
    if: |
      github.ref == 'refs/heads/main' && 
      (needs.build-android.result == 'success' || needs.build-android.result == 'skipped') &&
      (needs.build-ios.result == 'success' || needs.build-ios.result == 'skipped') &&
      needs.build-web.result == 'success'
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Expo CLI and EAS CLI
      run: |
        npm install -g @expo/cli
        npm install -g eas-cli@latest
    
    - name: Check for EXPO_TOKEN
      id: check-expo-token-deploy
      run: |
        if [[ -n "${EXPO_TOKEN:-}" ]]; then
          echo "has-expo-token=true" >> $GITHUB_OUTPUT
        else
          echo "has-expo-token=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Deploy to Expo
      if: steps.check-expo-token-deploy.outputs.has-expo-token == 'true'
      run: npm run deploy:auto
      env:
        EXPO_PUBLIC_SUPABASE_URL: ${{ env.SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}
        EXPO_PUBLIC_DEEPSEEK_API_KEY: ${{ env.DEEPSEEK_API_KEY || 'disabled' }}
        EXPO_TOKEN: ${{ env.EXPO_TOKEN }}
    
    - name: Skip Expo deployment (no EXPO_TOKEN)
      if: steps.check-expo-token-deploy.outputs.has-expo-token == 'false'
      run: |
        echo "‚ö†Ô∏è  EXPO_TOKEN not configured - skipping Expo deployment"
        echo "üí° Add EXPO_TOKEN to GitHub secrets to enable Expo deployment"
        echo "‚úÖ Web build artifacts are still available for manual deployment"

  notify:
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web, deploy]
    if: always()
    steps:
    - name: Notify build status
      run: |
        echo "## üöÄ Build Status Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Results:" >> $GITHUB_STEP_SUMMARY
        echo "- **Android Build:** ${{ needs.build-android.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **iOS Build:** ${{ needs.build-ios.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Web Build:** ${{ needs.build-web.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deploy:** ${{ needs.deploy.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.build-android.result }}" == "success" || "${{ needs.build-android.result }}" == "skipped" ]] && 
           [[ "${{ needs.build-ios.result }}" == "success" || "${{ needs.build-ios.result }}" == "skipped" ]] && 
           [[ "${{ needs.build-web.result }}" == "success" ]]; then
          echo "‚úÖ All builds completed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ All builds completed successfully!"
        else
          echo "‚ùå Some builds failed!" >> $GITHUB_STEP_SUMMARY
          echo "‚ùå Some builds failed!"
        fi
